knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
library(tidyverse) # for data munging
library(knitr) # for kable table formating
library(haven) # import and export 'SPSS', 'Stata' and 'SAS' Files
library(readxl) # import excel files
# #optional packages:
# library(afex) #anova functions
# library(langcog) #95 percent confidence intervals
# Just Experiment 6
data <- read_excel("data/study 6-accessible-feud.xlsx")
# Participant #16 should be dropped from analysis
excluded <- "16"
d <- data %>%
filter(!Subject %in% excluded) #participant exclusions
library(readxl)
study_6_accessible_feud <- read_excel("Group A/Choice 3/data/study 6-accessible-feud.xlsx")
View(study_6_accessible_feud)
# reproduce the above results here
data(mtcars)
by_cyl <- mtcars %>% group_by(cyl)
View(by_cyl)
View(mtcars)
View(by_cyl)
View(mtcars)
by_cyl %>% summarise(
disp = mean(disp),
hp = mean(hp)
)
View(d)
# reproduce the above results here
by_cond <- d %>% group_by(Cond)
View(by_cond)
by_cond %>% summarise(
mean = mean(expense),
std = std(expense)
)
by_cond %>% summarise(
mean = mean(expense),
std = sd(expense)
)
# calculate the confidence intervals
l.model <-lm(expense~1, by_cond)
# Calculate the confidence interval
confint(l.model, level=0.95)
# determine the means of the grouped data to determine which condition is which
by_cond %>% summarise(
mean = mean(expense),
sd = sd(expense),
se = sd / length(expense)
)
# determine the means of the grouped data to determine which condition is which
by_cond %>% summarise(
mean = mean(expense),
sd = sd(expense),
n = length(expense),
se = sd / n
)
#  find t-score that corresponds to confidence interval
alpha = 0.05
by_cond %>% summarise(
degrees_freedom = n - 1
)
# determine the means of the grouped data to determine which condition is which
summary <- summarise(
mean = mean(expense),
sd = sd(expense),
n = length(expense),
se = sd / n
)
# determine the means of the grouped data to determine which condition is which
stats -> summarise( by_cond,
mean = mean(expense),
sd = sd(expense),
n = length(expense),
se = sd / n
)
# determine the means of the grouped data to determine which condition is which
stats <- summarise( by_cond,
mean = mean(expense),
sd = sd(expense),
n = length(expense),
se = sd / n
)
View(stats)
#  find t-score that corresponds to confidence interval
alpha = 0.05
stats %>% summarise(
degrees_freedom = n - 1
)
# reference: https://bookdown.org/logan_kelly/r_practice/p09.html
#  find t-score that corresponds to confidence interval
alpha = 0.05
stats %>% summarise(
degrees_freedom = n - 1
t_score = qt(p=alpha, df=degrees_freedom, lower.tail = F)
#  find t-score that corresponds to confidence interval
alpha = 0.05
stats %>% summarise(
degrees_freedom = n - 1,
t_score = qt(p=alpha, df=degrees_freedom, lower.tail = F)
)
# reference: https://bookdown.org/logan_kelly/r_practice/p09.html
#  find t-score that corresponds to confidence interval
alpha = 0.05
stats %>% summarise(
degrees_freedom = n - 1,
t_score = qt(p=alpha, df=degrees_freedom, lower.tail = F),
margin_error = t_score * se
)
# reference: https://bookdown.org/logan_kelly/r_practice/p09.html
#  find t-score that corresponds to confidence interval
alpha = 0.05
stats %>% summarise(
degrees_freedom = n - 1,
t_score = qt(p=alpha, df=degrees_freedom, lower.tail = F),
margin_error = t_score * se,
lower_bound = mean - margin_error,
upper_bound = mean + margin_error
)
# reference: https://bookdown.org/logan_kelly/r_practice/p09.html
#  find t-score that corresponds to confidence interval
alpha = 0.05
stats %>% summarise(
degrees_freedom = n - 1,
t_score = qt(p=alpha, df=degrees_freedom, lower.tail = F),
margin_error = t_score * se,
lower_bound = mean - margin_error,
mean2 = mean
upper_bound = mean + margin_error
#  find t-score that corresponds to confidence interval
alpha = 0.05
stats %>% summarise(
degrees_freedom = n - 1,
t_score = qt(p=alpha, df=degrees_freedom, lower.tail = F),
margin_error = t_score * se,
lower_bound = mean - margin_error,
mean2 = mean,
upper_bound = mean + margin_error
)
# reference: https://bookdown.org/logan_kelly/r_practice/p09.html
#  find t-score that corresponds to confidence interval
alpha = 0.05
stats %>% summarise(
degrees_freedom = n - 1,
t_score = qt(p=alpha, df=degrees_freedom, lower.tail = T),
margin_error = t_score * se,
lower_bound = mean - margin_error,
mean2 = mean,
upper_bound = mean + margin_error
)
# reference: https://bookdown.org/logan_kelly/r_practice/p09.html
# determine the means of the grouped data to determine which condition is which
stats <- summarise( by_cond,
mean = mean(expense),
sd = sd(expense),
n = length(expense),
se = qnorm(0.975)*sd / sqrt(n)
)
# determine the means of the grouped data to determine which condition is which
stats <- summarise( by_cond,
mean = mean(expense),
sd = sd(expense),
n = length(expense),
se = qnorm(0.95)*sd / sqrt(n)
)
# determine the means of the grouped data to determine which condition is which
stats <- summarise( by_cond,
mean = mean(expense),
sd = sd(expense),
n = length(expense),
se = qnorm(0.05)*sd / sqrt(n)
)
# determine the means of the grouped data to determine which condition is which
stats <- summarise( by_cond,
mean = mean(expense),
sd = sd(expense),
n = length(expense),
se = sd/ n
# se = qnorm(0.05)*sd / sqrt(n)
)
#  find t-score that corresponds to confidence interval
alpha = 0.025
stats %>% summarise(
degrees_freedom = n - 1,
t_score = qt(p=alpha, df=degrees_freedom, lower.tail = F),
margin_error = t_score * se,
lower_bound = mean - margin_error,
mean2 = mean,
upper_bound = mean + margin_error
)
# reference: https://bookdown.org/logan_kelly/r_practice/p09.html
#  find t-score that corresponds to confidence interval
alpha = 0.025
stats %>% summarise(
degrees_freedom = n - 1,
t_score = qt(p=alpha, df=degrees_freedom, lower.tail = T),
margin_error = t_score * se,
lower_bound = mean - margin_error,
mean2 = mean,
upper_bound = mean + margin_error
)
# reference: https://bookdown.org/logan_kelly/r_practice/p09.html
#  find t-score that corresponds to confidence interval
alpha = 0.025
stats %>% summarise(
degrees_freedom = n - 1,
t_score = qt(p=alpha, df=degrees_freedom, lower.tail = F),
margin_error = t_score * se,
lower_bound = mean - margin_error,
mean2 = mean,
upper_bound = mean + margin_error
)
# reference: https://bookdown.org/logan_kelly/r_practice/p09.html
#  find t-score that corresponds to confidence interval
alpha = 0.05
stats %>% summarise(
degrees_freedom = n - 1,
t_score = qt(p=alpha, df=degrees_freedom, lower.tail = F),
margin_error = t_score * se,
lower_bound = mean - margin_error,
mean2 = mean,
upper_bound = mean + margin_error
)
# reference: https://bookdown.org/logan_kelly/r_practice/p09.html
#  find t-score that corresponds to confidence interval
alpha = 0.001
stats %>% summarise(
degrees_freedom = n - 1,
t_score = qt(p=alpha, df=degrees_freedom, lower.tail = F),
margin_error = t_score * se,
lower_bound = mean - margin_error,
mean2 = mean,
upper_bound = mean + margin_error
)
# reference: https://bookdown.org/logan_kelly/r_practice/p09.html
#  find t-score that corresponds to confidence interval
alpha = 0.001
stats %>% summarise(
degrees_freedom = n - 1,
# t_score = qt(p=alpha, df=degrees_freedom, lower.tail = F),
z_socre = 1.96,
margin_error = z_score * se,
lower_bound = mean - margin_error,
mean2 = mean,
upper_bound = mean + margin_error
)
#  find t-score that corresponds to confidence interval
alpha = 0.001
z_score = 1.96,
#  find t-score that corresponds to confidence interval
alpha = 0.001
z_score = 1.96
stats %>% summarise(
degrees_freedom = n - 1,
# t_score = qt(p=alpha, df=degrees_freedom, lower.tail = F),
margin_error = z_score * se,
lower_bound = mean - margin_error,
mean2 = mean,
upper_bound = mean + margin_error
)
# reference: https://bookdown.org/logan_kelly/r_practice/p09.html
# determine the means of the grouped data to determine which condition is which
stats <- summarise( by_cond,
mean = mean(expense),
sd = sd(expense),
n = length(expense),
se = sd/ sqrt(n)
# se = sd/ sn
# se = qnorm(0.05)*sd / sqrt(n)
)
#  find t-score that corresponds to confidence interval
alpha = 0.001
z_score = 1.96
stats %>% summarise(
degrees_freedom = n - 1,
# t_score = qt(p=alpha, df=degrees_freedom, lower.tail = F),
margin_error = z_score * se,
lower_bound = mean - margin_error,
mean2 = mean,
upper_bound = mean + margin_error
)
# reference: https://bookdown.org/logan_kelly/r_practice/p09.html
